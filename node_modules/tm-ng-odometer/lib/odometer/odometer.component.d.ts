/// <reference path="odometer.d.ts" />
import { OnInit, OnDestroy, OnChanges, AfterViewInit, ElementRef } from '@angular/core';
import { Observable } from 'rxjs';
import { TmNgOdometerConfigModel } from './odometer.config';
import * as ɵngcc0 from '@angular/core';
export declare class TmNgOdometerComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit {
    private subscription;
    private odometer;
    container: ElementRef;
    number: number;
    config: TmNgOdometerConfigModel;
    observable: Observable<boolean>;
    animation: string;
    format: string;
    theme: string;
    value: number;
    duration: number;
    auto: boolean;
    private themes;
    private initOdometer;
    private initConfig;
    ngOnInit(): void;
    ngOnDestroy(): void;
    ngOnChanges(): void;
    ngAfterViewInit(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<TmNgOdometerComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<TmNgOdometerComponent, "tm-ng-odometer", never, {
    "config": "config";
    "observable": "observable";
    "animation": "animation";
    "format": "format";
    "theme": "theme";
    "value": "value";
    "duration": "duration";
    "auto": "auto";
    "number": "number";
}, {}, never>;
}

//# sourceMappingURL=odometer.component.d.ts.map